{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","defaultProps","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","copy","split","length","Alert","alert","word","lower","charAt","slice","capitalized","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0026b8af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                About\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            } mx-3`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = { title: PropTypes.string, isRequired: PropTypes.bool };\r\n\r\nNavbar.defaultProps = {\r\n  title: \"This is the title\",\r\n};\r\n","// import { computeHeadingLevel } from \"@testing-library/dom\";\r\nimport React, { useState } from \"react\";\r\nimport copy from \"copy-to-clipboard\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleonChange = (event) => {\r\n    //console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n  const handleOnClick = () => {\r\n    //console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    //console.log(\"LowerCase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase!\", \"success\");\r\n  };\r\n  const copyToClipboard = () => {\r\n    copy(text);\r\n    props.showAlert(\"Text is copied\", \"success\");\r\n    //alert(`You have copied \"${text}\"`);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  // If  you want to change the useState\r\n  // setText(\"new text\"); --> this will change the text of useState\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"light\" ? \"#212520\" : \"white\",\r\n        }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleonChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#212520\" : \"white\",\r\n              color: props.mode === \"light\" ? \"#212520\" : \"white\",\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleOnClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={copyToClipboard}>\r\n          Copy to Clipboard\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color: props.mode === \"light\" ? \"#212520\" : \"white\",\r\n        }}\r\n      >\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read the text.</p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter your text in the textbox to preview it here!\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalized = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalized(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#212520\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n        {/* <Route exact path=\"/about\"> */}\n        {/* <About /> */}\n        {/* </Route> */}\n        {/* <Route exact path=\"/\"> */}\n        <TextForm\n          showAlert={showAlert}\n          heading=\"Enter your text here!\"\n          mode={mode}\n        />\n        {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}